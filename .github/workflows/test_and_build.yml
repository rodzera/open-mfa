name: Test and Build

on:
  push:
    paths:
      - 'src/**'
      - '.github/**'

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-22.04
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Extract version from version.yaml
      id: version
      run: |
        echo "VERSION=$(cat src/app/version.yaml | tr -d '[:space:]' | awk -F: '{print $2}')" | tee -a $GITHUB_ENV $GITHUB_OUTPUT

    - name: Check if version exists on Docker Hub
      run: |
        RESPONSE=$(curl -s -u "${{ secrets.DOCKERHUB_USER }}:${{ secrets.DOCKERHUB_PASS }}" 'https://hub.docker.com/v2/namespaces/${{ secrets.DOCKERHUB_USER }}/repositories/open-mfa/tags/${{ env.VERSION }}')
        bash .github/scripts/check_version.sh "$RESPONSE" "${{ env.VERSION }}"          

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Run tests
      run: |
        export _TESTING=1
        pytest src/tests --cov=src/app --cov-branch --cov-report=xml

    - name: Upload coverage reports to Codecov
      if: github.ref == 'refs/heads/master'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  docker_hub:
    name: Publish docker image to docker hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USER }}/open-mfa

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:src"
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/open-mfa:${{ needs.tests.outputs.VERSION }} , ${{ secrets.DOCKERHUB_USER }}/open-mfa:latest
          labels: ${{ steps.meta.outputs.labels }}
