name: Test and Build

on:
  push:
    paths:
      - 'src/**'
      - '.github/**'

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Extract app version
      id: version
      run: |
        VERSION=$(cat src/app/version.yaml | tr -d '[:space:]' | awk -F: '{print $2}')
        echo "VERSION=$VERSION" | tee -a $GITHUB_ENV $GITHUB_OUTPUT

    - name: Check if git tag already exists
      run: |
        if git rev-parse "${{ env.VERSION }}" >/dev/null 2>&1; then
          echo "Tag ${{ env.VERSION }} already exists. Skipping build."
          exit 1
        fi

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Run tests
      run: |
        export _TESTING=1
        pytest src/tests --cov=src/app --cov-branch --cov-report=xml

    - name: Upload coverage reports to Codecov
      if: github.ref == 'refs/heads/master'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  tag_and_publish:
    name: Tag and publish to GHCR
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:src"
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.tests.outputs.VERSION }}
            ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create and push git tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "${{ needs.tests.outputs.VERSION }}"
          git push origin "${{ needs.tests.outputs.VERSION }}"
